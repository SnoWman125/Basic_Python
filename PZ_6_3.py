#Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом — данные об их хобби.
#Известно, что при хранении данных используется принцип: одна строка — один пользователь, разделитель между значениями — запятая.
#Написать код, загружающий данные из обоих файлов и формирующий из них словарь: ключи — ФИО, значения — данные о хобби.
#Сохранить словарь в файл. Проверить сохранённые данные. Если в файле, хранящем данные о хобби, меньше записей, чем в файле с ФИО, задаём в словаре значение None.
#Если наоборот — выходим из скрипта с кодом «1». При решении задачи считать, что объём данных в файлах во много раз меньше объема ОЗУ.

users = []
hobby = []
dict = {}
with open('users.csv', encoding='utf-8') as user:
    with open('hobby.csv', encoding='utf-8') as hobbyes:
        [users.append(line.replace(',', ' ') and line.replace('\n', '')) for line in user]
        [hobby.append(line.replace('\n', ' ')) for line in hobbyes]
if len(users) < len(hobby):
    exit(1)
else:
    for i in range(len(hobby)+1, len(users)+1, 1):
        hobby.append(None)
for i in range(len(users)):
    dict[users[i]] = hobby[i]
print(dict)
#Решить задачу 3 для ситуации, когда объём данных в файлах превышает объём
#ОЗУ (разумеется, не нужно реально создавать такие большие файлы, это просто задел на
#будущее проекта). Только теперь не нужно создавать словарь с данными. Вместо этого нужно
#сохранить объединенные данные в новый файл (users_hobby.txt). Хобби пишем через
#двоеточие и пробел после ФИО:
with open('users_hobby', 'w') as file:
    for i in range(len(users)):
        file.writelines(f'{users[i]}: {hobby[i]}\n')


